diff -wrupN src_orig/HiggsCSandWidth.cc src/HiggsCSandWidth.cc
--- src_orig/HiggsCSandWidth.cc	2012-05-17 04:39:11.000000000 -0500
+++ src/HiggsCSandWidth.cc	2012-05-17 04:47:18.000000000 -0500
@@ -14,8 +14,9 @@
 #include "TCanvas.h"
 #include "TSpline.h"
 
+#include "FWCore/ParameterSet/interface/FileInPath.h"
 
-#include "HiggsCSandWidth.h"
+#include "FinalStateAnalysis/MetaData/interface/HiggsCSandWidth.h"
 
 using namespace std;
 
@@ -28,7 +29,7 @@ HiggsCSandWidth::HiggsCSandWidth()
   ifstream file;
  
   // Read Widths into memory
-  FileLoc = "../txtFiles/HiggsBR_7TeV_Official.txt"; //directory of input file
+  FileLoc = edm::FileInPath("FinalStateAnalysis/MetaData/data/HCSaWHiggsBR_7TeV_Official.txt").fullPath().c_str(); //directory of input file
   const char* BranchRatioFileLoc = FileLoc.c_str(); 
   file.open(BranchRatioFileLoc);
   for(int k = 0; k < N_BR; k++){
@@ -42,7 +43,7 @@ HiggsCSandWidth::HiggsCSandWidth()
   file.close();
 
   // Read CS into memory                                                                                                                                                  
-  file.open("../txtFiles/HiggsCS_Official.txt");//directory of input file
+  file.open(edm::FileInPath("FinalStateAnalysis/MetaData/data/HCSaWHiggsCS_Official.txt").fullPath().c_str());//directory of input file
   for(int k = 0; k < N_CS; k++){
 
     file >> mass_XS[k] >> CS[ID_ggToH][k] >> CS[ID_VBF][k] >> CS[ID_WH][k] >> CS[ID_ZH][k] >> CS[ID_ttH][k] >> CS[ID_Total][k];
@@ -50,7 +51,7 @@ HiggsCSandWidth::HiggsCSandWidth()
   }
   file.close();
 
-  file.open("../txtFiles/HiggsCS_ErrorPlus_Official.txt");//directory of input file                       
+  file.open(edm::FileInPath("FinalStateAnalysis/MetaData/data/HCSaWHiggsCS_ErrorPlus_Official.txt").fullPath().c_str());//directory of input file
   for(int k = 0; k < N_CS; k++){
 
     file >> scratchMass >> CSerrPlus[ID_ggToH][k] >> CSerrPlus[ID_VBF][k] >> CSerrPlus[ID_WH][k] >> CSerrPlus[ID_ZH][k] >> CSerrPlus[ID_ttH][k];
@@ -58,7 +59,7 @@ HiggsCSandWidth::HiggsCSandWidth()
   }
   file.close();
 
-  file.open("../txtFiles/HiggsCS_ErrorMinus_Official.txt");//directory of input file                                                
+  file.open(edm::FileInPath("FinalStateAnalysis/MetaData/data/HCSaWHiggsCS_ErrorMinus_Official.txt").fullPath().c_str());//directory of input file
   for(int k = 0; k < N_CS; k++){
 
     file >> scratchMass >> CSerrMinus[ID_ggToH][k] >> CSerrMinus[ID_VBF][k] >> CSerrMinus[ID_WH][k] >> CSerrMinus[ID_ZH][k] >> CSerrMinus[ID_ttH][k];
@@ -66,7 +67,7 @@ HiggsCSandWidth::HiggsCSandWidth()
   }
   file.close();
 
-  file.open("../txtFiles/HiggsCS_ScaleErrorPlus_Official.txt");//directory of input file                                                
+  file.open(edm::FileInPath("FinalStateAnalysis/MetaData/data/HCSaWHiggsCS_ScaleErrorPlus_Official.txt").fullPath().c_str());//directory of input file
   for(int k = 0; k < N_CS; k++){
 
     file >> scratchMass >> CSscaleErrPlus[ID_ggToH][k] >> CSscaleErrPlus[ID_VBF][k] >> CSscaleErrPlus[ID_WH][k] >> CSscaleErrPlus[ID_ZH][k] >> CSscaleErrPlus[ID_ttH][k];
@@ -74,7 +75,7 @@ HiggsCSandWidth::HiggsCSandWidth()
   }
   file.close();
 
-  file.open("../txtFiles/HiggsCS_ScaleErrorMinus_Official.txt");//directory of input file                                     
+  file.open(edm::FileInPath("FinalStateAnalysis/MetaData/data/HCSaWHiggsCS_ScaleErrorMinus_Official.txt").fullPath().c_str());//directory of input file
   for(int k = 0; k < N_CS; k++){
 
     file >> scratchMass >> CSscaleErrMinus[ID_ggToH][k] >> CSscaleErrMinus[ID_VBF][k] >> CSscaleErrMinus[ID_WH][k] >> CSscaleErrMinus[ID_ZH][k] >> CSscaleErrMinus[ID_ttH][k];
@@ -82,7 +83,7 @@ HiggsCSandWidth::HiggsCSandWidth()
   }
   file.close();
 
-  file.open("../txtFiles/HiggsCS_PdfErrorPlus_Official.txt");//directory of input file                  
+  file.open(edm::FileInPath("FinalStateAnalysis/MetaData/data/HCSaWHiggsCS_PdfErrorPlus_Official.txt").fullPath().c_str());//directory of input file
   for(int k = 0; k < N_CS; k++){
 
     file >> scratchMass >> CSpdfErrPlus[ID_ggToH][k] >> CSpdfErrPlus[ID_VBF][k] >> CSpdfErrPlus[ID_WH][k] >> CSpdfErrPlus[ID_ZH][k] >> CSpdfErrPlus[ID_ttH][k];
@@ -90,7 +91,7 @@ HiggsCSandWidth::HiggsCSandWidth()
   }
   file.close();
 
-  file.open("../txtFiles/HiggsCS_PdfErrorMinus_Official.txt");//directory of input file                           
+  file.open(edm::FileInPath("FinalStateAnalysis/MetaData/data/HCSaWHiggsCS_PdfErrorMinus_Official.txt").fullPath().c_str());//directory of input file
   for(int k = 0; k < N_CS; k++){
 
     file >> scratchMass >> CSpdfErrMinus[ID_ggToH][k] >> CSpdfErrMinus[ID_VBF][k] >> CSpdfErrMinus[ID_WH][k] >> CSpdfErrMinus[ID_ZH][k] >> CSpdfErrMinus[ID_ttH][k];
@@ -167,7 +168,7 @@ double HiggsCSandWidth::HiggsCS(int ID, 
 	{
 	  if(i < 1){i = 1;}
 	  if(i+2 >= N_CS){i = N_CS - 3;}
-	  int index = 4;
+	  const int index = 4;
 	  double xmh[index], sig[index];
 	  xmh[0]=mass_XS[i-1];xmh[1]=mass_XS[i];xmh[2]=mass_XS[i+1];xmh[3]=mass_XS[i+2];
 	  sig[0]=CS[ID][i-1]; sig[1]=CS[ID][i]; sig[2]=CS[ID][i+1]; sig[3]=CS[ID][i+2];
@@ -659,7 +660,7 @@ double HiggsCSandWidth::HiggsWidth(int I
 	    {
 	      if(i < 1){i = 1;}
 	      if(i+2 >= N_BR){i = N_BR - 3;}
-	      int indexW = 4;
+	      const int indexW = 4;
 	      double xmhW[indexW], sigW[indexW];
 	      xmhW[0]=mass_BR[i-1];xmhW[1]=mass_BR[i];xmhW[2]=mass_BR[i+1];xmhW[3]=mass_BR[i+2];
 	      sigW[0]=BR[ID][i-1]; sigW[1]=BR[ID][i]; sigW[2]=BR[ID][i+1]; sigW[3]=BR[ID][i+2];
@@ -675,7 +676,7 @@ double HiggsCSandWidth::HiggsWidth(int I
 	      if(i < 1){i = 1;}
 	      if(i+2 >= N_BR){i = N_BR - 3;}
 
-	      int indexW = 4;
+	      const int indexW = 4;
 	      double xmhW[indexW], sigW[indexW];
 	      xmhW[0]=mass_BR[i-1];xmhW[1]=mass_BR[i];xmhW[2]=mass_BR[i+1];xmhW[3]=mass_BR[i+2];
 	      sigW[0]=BR[0][i-1]; sigW[1]=BR[0][i]; sigW[2]=BR[0][i+1]; sigW[3]=BR[0][i+2];
@@ -687,7 +688,7 @@ double HiggsCSandWidth::HiggsWidth(int I
 	      delete gsW;
 	      delete graphW;
    
-	      int indexPW = 4;
+	      const int indexPW = 4;
 	      double xmhPW[indexPW], sigPW[indexPW];
 	      xmhPW[0]=mass_BR[i-1];xmhPW[1]=mass_BR[i];xmhPW[2]=mass_BR[i+1];xmhPW[3]=mass_BR[i+2];
 	      sigPW[0]=BR[ID][i-1]; sigPW[1]=BR[ID][i]; sigPW[2]=BR[ID][i+1]; sigPW[3]=BR[ID][i+2];
@@ -792,7 +793,7 @@ double HiggsCSandWidth::HiggsBR(int ID, 
 	{
 	  if(i < 1){i = 1;}
 	  if(i+2 >= N_BR){i = N_BR - 3;}
-	  int indexBR = 4;
+	  const int indexBR = 4;
 	  double xmhBR[indexBR], sigBR[indexBR];
 	  xmhBR[0]=mass_BR[i-1];xmhBR[1]=mass_BR[i];xmhBR[2]=mass_BR[i+1];xmhBR[3]=mass_BR[i+2];
 	  sigBR[0]=BR[ID][i-1]; sigBR[1]=BR[ID][i]; sigBR[2]=BR[ID][i+1]; sigBR[3]=BR[ID][i+2];
diff -wrupN src_orig/HiggsCSandWidthFermi.cc src/HiggsCSandWidthFermi.cc
--- src_orig/HiggsCSandWidthFermi.cc	2012-05-17 04:39:11.000000000 -0500
+++ src/HiggsCSandWidthFermi.cc	2012-05-17 04:47:51.000000000 -0500
@@ -14,7 +14,9 @@
 #include "TCanvas.h"
 #include "TSpline.h"
 
-#include "HiggsCSandWidthFermi.h"
+#include "FWCore/ParameterSet/interface/FileInPath.h"
+
+#include "FinalStateAnalysis/MetaData/interface/HiggsCSandWidthFermi.h"
 
 using namespace std;
 
@@ -26,7 +28,7 @@ HiggsCSandWidthFermi::HiggsCSandWidthFer
   ifstream file;
  
   // Read Widths into memory
-  FileLoc = "../txtFiles/Higgs_BR_Fermiophobic.txt"; //directory of input file
+  FileLoc = edm::FileInPath("FinalStateAnalysis/MetaData/data/HCSaWHiggs_BR_Fermiophobic.txt").fullPath().c_str(); //directory of input file
   const char* BranchRatioFileLoc = FileLoc.c_str(); 
   file.open(BranchRatioFileLoc);
   for(int k = 0; k < N_BR; k++){
@@ -117,7 +119,7 @@ double HiggsCSandWidthFermi::HiggsWidth(
 	      if(i < 1){i = 1;}
 	      if(i+2 >= N_BR){i = N_BR - 3;}
 
-	      int indexWFF = 4;
+	      const int indexWFF = 4;
 	      double xmhWFF[indexWFF], sigWFF[indexWFF];
 	      xmhWFF[0]=mass_BR[i-1];xmhWFF[1]=mass_BR[i];xmhWFF[2]=mass_BR[i+1];xmhWFF[3]=mass_BR[i+2];
 	      sigWFF[0]=BR[ID][i-1]; sigWFF[1]=BR[ID][i]; sigWFF[2]=BR[ID][i+1]; sigWFF[3]=BR[ID][i+2];
@@ -133,7 +135,7 @@ double HiggsCSandWidthFermi::HiggsWidth(
 	      if(i < 1){i = 1;}
 	      if(i+2 >= N_BR){i = N_BR - 3;}
 
-	      int indexWFF = 4;
+	      const int indexWFF = 4;
 	      double xmhWFF[indexWFF], sigWFF[indexWFF];
 	      xmhWFF[0]=mass_BR[i-1];xmhWFF[1]=mass_BR[i];xmhWFF[2]=mass_BR[i+1];xmhWFF[3]=mass_BR[i+2];
 	      sigWFF[0]=BR[0][i-1]; sigWFF[1]=BR[0][i]; sigWFF[2]=BR[0][i+1]; sigWFF[3]=BR[0][i+2];
@@ -145,7 +147,7 @@ double HiggsCSandWidthFermi::HiggsWidth(
 	      delete gsWFF;
 	      delete graphWFF;
    
-	      int indexPWFF = 4;
+	      const int indexPWFF = 4;
 	      double xmhPWFF[indexPWFF], sigPWFF[indexPWFF];
 	      xmhPWFF[0]=mass_BR[i-1];xmhPWFF[1]=mass_BR[i];xmhPWFF[2]=mass_BR[i+1];xmhPWFF[3]=mass_BR[i+2];
 	      sigPWFF[0]=BR[ID][i-1]; sigPWFF[1]=BR[ID][i]; sigPWFF[2]=BR[ID][i+1]; sigPWFF[3]=BR[ID][i+2];
@@ -224,7 +226,7 @@ double HiggsCSandWidthFermi::HiggsBR(int
 	  if(i < 1){i = 1;}
 	  if(i+2 >= N_BR){i =N_BR - 3;}
 
-	  int indexBRFF = 4;
+	  const int indexBRFF = 4;
 	  double xmhBRFF[indexBRFF], sigBRFF[indexBRFF];
 	  xmhBRFF[0]=mass_BR[i-1];xmhBRFF[1]=mass_BR[i];xmhBRFF[2]=mass_BR[i+1];xmhBRFF[3]=mass_BR[i+2];
 	  sigBRFF[0]=BR[ID][i-1]; sigBRFF[1]=BR[ID][i]; sigBRFF[2]=BR[ID][i+1]; sigBRFF[3]=BR[ID][i+2];
diff -wrupN src_orig/HiggsCSandWidthSM4.cc src/HiggsCSandWidthSM4.cc
--- src_orig/HiggsCSandWidthSM4.cc	2012-05-17 04:39:11.000000000 -0500
+++ src/HiggsCSandWidthSM4.cc	2012-05-17 04:48:12.000000000 -0500
@@ -14,7 +14,9 @@
 #include "TCanvas.h"
 #include "TSpline.h"
 
-#include "HiggsCSandWidthSM4.h"
+#include "FWCore/ParameterSet/interface/FileInPath.h"
+
+#include "FinalStateAnalysis/MetaData/interface/HiggsCSandWidthSM4.h"
 
 using namespace std;
 
@@ -29,7 +31,7 @@ HiggsCSandWidthSM4::HiggsCSandWidthSM4()
   ifstream file;
   double scratchHgg;
   // Read Widths into memory
-  file.open("../txtFiles/Higgs_BR_SM4.txt");
+  file.open(edm::FileInPath("FinalStateAnalysis/MetaData/data/HCSaWHiggs_BR_SM4.txt").fullPath().c_str());
   for(int k = 0; k < N_BR; k++){
 
     file >> mass_BR[k] >> BR[0][k] >> BR[1][k] >> BR[2][k] >> BR[3][k] >> BR[4][k] >> BR[5][k] >> BR[6][k] >> BR[7][k] >> scratchHgg >> BR[9][k]
@@ -40,7 +42,7 @@ HiggsCSandWidthSM4::HiggsCSandWidthSM4()
   file.close();
 
   // Read Widths into memory
-  file.open("../txtFiles/Higgs_BR_SM4_Hgg.txt");
+  file.open(edm::FileInPath("FinalStateAnalysis/MetaData/data/HCSaWHiggs_BR_SM4_Hgg.txt").fullPath().c_str());
   for(int k = 0; k < N_BR_gg; k++){
 
     file >> mass_BR_gg[k] >> BR[8][k];
@@ -50,7 +52,7 @@ HiggsCSandWidthSM4::HiggsCSandWidthSM4()
   file.close();
 
   // Read CS into memory
-  file.open("../txtFiles/HiggsCS_Official_SM4.txt");//directory of input file
+  file.open(edm::FileInPath("FinalStateAnalysis/MetaData/data/HCSaWHiggsCS_Official_SM4.txt").fullPath().c_str());//directory of input file
   for(int k = 0; k < N_CS; k++){
 
     file >> mass_XS[k] >> CS[ID_ggToH][k];// >> CS[ID_VBF][k] >> CS[ID_WH][k] >> CS[ID_ZH][k] >> CS[ID_ttH][k] >> CS[ID_Total][k];
@@ -60,7 +62,7 @@ HiggsCSandWidthSM4::HiggsCSandWidthSM4()
   }
   file.close();
 
-  file.open("../txtFiles/HiggsCS_Error_Official_SM4.txt");//directory of input file                       
+  file.open(edm::FileInPath("FinalStateAnalysis/MetaData/data/HCSaWHiggsCS_Error_Official_SM4.txt").fullPath().c_str());//directory of input file
   for(int k = 0; k < N_CSE; k++){
 
     file >> scratchMass >> CSerrPlus[ID_ggToH][k] >> CSerrMinus[ID_ggToH][k] >> CSscaleErrPlus[ID_ggToH][k] >> CSscaleErrMinus[ID_ggToH][k]
@@ -146,7 +148,7 @@ double HiggsCSandWidthSM4::HiggsCS(int I
 	  if(i < 1){i = 1;}
 	  if(i+2 >= N_CS){i = N_CS - 3;}
 	  
-	  int indexSM4 = 4;
+	  const int indexSM4 = 4;
 	  double xmhSM4[indexSM4], sigSM4[indexSM4];
 	  xmhSM4[0]=mass_XS[i-1];xmhSM4[1]=mass_XS[i];xmhSM4[2]=mass_XS[i+1];xmhSM4[3]=mass_XS[i+2];
 	  sigSM4[0]=CS[ID][i-1]; sigSM4[1]=CS[ID][i]; sigSM4[2]=CS[ID][i+1]; sigSM4[3]=CS[ID][i+2];
@@ -637,7 +639,7 @@ double HiggsCSandWidthSM4::HiggsWidth(in
 	  if( ID == 0 )
 	    {
 	      if(i < 1){i = 1;}
-	      int indexWSM4 = 4;
+	      const int indexWSM4 = 4;
 	      double xmhWSM4[indexWSM4], sigWSM4[indexWSM4];
 	      xmhWSM4[0]=mass_BR[i-1];xmhWSM4[1]=mass_BR[i];xmhWSM4[2]=mass_BR[i+1];xmhWSM4[3]=mass_BR[i+2];
 	      sigWSM4[0]=BR[ID][i-1]; sigWSM4[1]=BR[ID][i]; sigWSM4[2]=BR[ID][i+1]; sigWSM4[3]=BR[ID][i+2];
@@ -654,7 +656,7 @@ double HiggsCSandWidthSM4::HiggsWidth(in
 	    if(i+2 >= N_BR){i = N_BR - 3;}
 	    if(ID == 8 && i+2 >= N_BR){i = N_BR_gg - 3;}
 
-	    int indexWSM4 = 4;
+	    const int indexWSM4 = 4;
 	    double xmhWSM4[indexWSM4], sigWSM4[indexWSM4];
 	    xmhWSM4[0]=mass_BR[i-1];xmhWSM4[1]=mass_BR[i];xmhWSM4[2]=mass_BR[i+1];xmhWSM4[3]=mass_BR[i+2];
 	    sigWSM4[0]=BR[0][i-1]; sigWSM4[1]=BR[0][i]; sigWSM4[2]=BR[0][i+1]; sigWSM4[3]=BR[0][i+2];
@@ -666,7 +668,7 @@ double HiggsCSandWidthSM4::HiggsWidth(in
 	    delete gsWSM4;
 	    delete graphWSM4;
 	    
-	    int indexPWSM4 = 4;
+	    const int indexPWSM4 = 4;
 	    double xmhPWSM4[indexPWSM4], sigPWSM4[indexPWSM4];
 	    xmhPWSM4[0]=mass_BR[i-1];xmhPWSM4[1]=mass_BR[i];xmhPWSM4[2]=mass_BR[i+1];xmhPWSM4[3]=mass_BR[i+2];
 	    sigPWSM4[0]=BR[ID][i-1]; sigPWSM4[1]=BR[ID][i]; sigPWSM4[2]=BR[ID][i+1]; sigPWSM4[3]=BR[ID][i+2];
@@ -778,7 +780,7 @@ double HiggsCSandWidthSM4::HiggsBR(int I
           if(i+2 >= N_BR){i = N_BR - 3;}
           if(ID == 8 && i+2 >= N_BR){i = N_BR_gg - 3;}
 
-	  int indexBRSM4 = 4;
+	  const int indexBRSM4 = 4;
 	  double xmhBRSM4[indexBRSM4], sigBRSM4[indexBRSM4];
 	  xmhBRSM4[0]=mass_BR[i-1];xmhBRSM4[1]=mass_BR[i];xmhBRSM4[2]=mass_BR[i+1];xmhBRSM4[3]=mass_BR[i+2];
 	  sigBRSM4[0]=BR[ID][i-1]; sigBRSM4[1]=BR[ID][i]; sigBRSM4[2]=BR[ID][i+1]; sigBRSM4[3]=BR[ID][i+2];
